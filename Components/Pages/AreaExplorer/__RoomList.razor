@using ExodusMudClient.Data.Game.Models
@inject IAreaFileConverter AreaConverter

<MudTable Items="@rooms" Dense="@true" Hover="@true" Bordered="@true" FixedHeader="@true"
    Filter="new Func<AreaFileRoom,bool>(FilterFunc)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Rooms</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start"
            AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0">
        </MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Vnum</MudTh>
        <MudTh>Name</MudTh>
        <MudTh Class="content-width"></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Vnum</MudTd>
        <MudTd>
            <MudChip Style="background-color: black;">
                @(new MarkupString(AreaConverter.ConvertExodusColor(context.RoomName)))
            </MudChip>
        </MudTd>
        <MudTd>
            <MudIconButton Icon="@Icons.Material.Filled.Edit"
                OnClick="@(EventCallback.Factory.Create(this, () => OpenRoom(context)))"></MudIconButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private string searchString = "";
    private bool FilterFunc(AreaFileRoom element) =>
    Filter.FilterFunc(element, searchString, (element) => element.RoomName);

    [Parameter]
    public List<AreaFileRoom>? rooms { get; set; }


    private void OpenRoom(AreaFileRoom room)
    {
    }

}