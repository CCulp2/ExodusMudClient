@using ExodusMudClient.Data.Game.Models
@inject IAreaFileConverter AreaConverter
@inject IDialogService DialogService

<MudTable Items="@mobiles" Dense="@true" Hover="@true" Bordered="@true" FixedHeader="@true"
    Filter="new Func<AreaFileMobile,bool>(FilterFunc)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Mobiles</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start"
            AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0">
        </MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Vnum</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Short</MudTh>
        <MudTh>Long</MudTh>
        <MudTh Class="content-width"></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Vnum</MudTd>
        <MudTd>
            <MudChip Style="background-color: black;">
                @(new MarkupString($"{AreaConverter.ConvertExodusColor(context.NameForTargeting)}"))
            </MudChip>
        </MudTd>
        <MudTd>
            <MudChip Style="background-color: black;">
                @(new MarkupString($"{AreaConverter.ConvertExodusColor(context.ShortDescription)}"))
            </MudChip>
        </MudTd>
        <MudTd>
            <MudChip Style="background-color: black;">
                @(new MarkupString($"{AreaConverter.ConvertExodusColor(context.LongDescription)}"))
            </MudChip>
        </MudTd>
        <MudTd>
            <MudIconButton Icon="@Icons.Material.Filled.Edit"
                OnClick="@(EventCallback.Factory.Create(this, () => OpenMobile(context)))"></MudIconButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private string searchString = "";
    private bool FilterFunc(AreaFileMobile element) =>
    Filter.FilterFunc(element, searchString, (element) => element.NameForTargeting, (element) => element.ShortDescription);

    [Parameter]
    public List<AreaFileMobile>? mobiles { get; set; }

    private void OpenMobile(AreaFileMobile mobile)
    {
        var parameters = new DialogParameters<_Mobile>();
        parameters.Add(x => x.selectedMobile, mobile);
        DialogService.Show<_Mobile>("View Mobile", parameters, new DialogOptions
            {
                MaxWidth = MaxWidth.Large,
                FullWidth = true,
                CloseButton = true,
                ClassBackground = "bg-blur"
            });
    }

}