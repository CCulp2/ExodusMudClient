@page "/"
@using Ganss.Xss
@using ExodusMudClient.Data.Game.Models
@inject ITcpService TcpService
@inject IAreaFileConverter AreaConverter
@inject IWebHostEnvironment _environment
@inject IJSRuntime JSRuntime;

<h1>test</h1>


@code {
    public AreaFile area = new AreaFile();
    public List<MarkupString> messages = new List<MarkupString> { };
    private string? userInput;
    protected override void OnInitialized() {
        TcpService.Connect("exodusmud.com",9000);
        TcpService.DataReceived += OnDataReceived; // Subscribe to the event
        area = AreaConverter.ParseAreaFile(Path.Combine(_environment.WebRootPath, "AreaFiles/abbey.are"));
    }
    private async void OnDataReceived(string data) {
    
        await InvokeAsync(() => {
            data = data.Replace("<", "(");
            data = data.Replace(">", ")");

            data = data.Replace("\n","<br>");
            data = data.Replace("\r","");
            messages.Add(new MarkupString(AnsiHelper.ToHtml(data)));
            StateHasChanged();
        });

    }

    private void SendData(string text) {
        TcpService.SendData(text);
        userInput = ""; // Clear the input field
        StateHasChanged();
        
    }

    private void HandleKeyDown(KeyboardEventArgs e) {
        if (e.Key == "Enter") {
            if (string.IsNullOrWhiteSpace(userInput)) return;
            SendData(userInput);
            userInput = "";
            StateHasChanged();
        }
    }

    private async Task ScrollToBottomAsync(string elementId) {
        await JSRuntime.InvokeVoidAsync("scrollToBottom",elementId);
        await InvokeAsync(() => {
            StateHasChanged(); // Tell Blazor to re-render the component.
        });
    }
}
